/*
 * TeleStax, Open Source Cloud Communications
 * Copyright 2011-2016, Telestax Inc and individual contributors
 * by the @authors tag.
 *
 * This program is free software: you can redistribute it and/or modify
 * under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */
package net.java.slee.resource.diameter.ro.events.avp;

import net.java.slee.resource.diameter.base.events.avp.GroupedAvp;

/**
 * Defines an interface representing the Recipient-Received-Address  grouped AVP type.<br>
 * <br>
 * From the Diameter Ro Reference Point Protocol Details (3GPP TS 32.299 V8.25.0) specification:
 * <pre>
 *  The Originator-Received-Address AVP (AVP code 2027) is of type Grouped.
 *  Its purpose is to identify the originator of a message with the original, unmodified address information as received before any address manipulations has taken place in the entity generating the charging information.
 *  This field allows correlation of address information with information generated by other nodes  in the message flow.
 *
 *  It has the following ABNF grammar:
 *  Originator-Received-Address  :: = 	< AVP Header: 2027>
 *
 *      [ Address-Type ]
 *      [ Address-Data ]
 *      [ Address-Domain ]
 *
 * </pre>
 *
 * @author <a href="mailto:grzegorz.figiel@pro-ids.com"> Grzegorz Figiel [ProIDS] </a>
 */
public interface OriginatorReceivedAddress extends GroupedAvp {

    /**
     * Returns the value of the Address-Type AVP, of type Enumerated. A return value of null implies that the AVP has not been set.
     */
    abstract AddressType getAddressType();

    /**
     * Returns the value of the Address-Data AVP, of type UTF8String. A return value of null implies that the AVP has not been set.
     */
    abstract String getAddressData();

    /**
     * Returns the value of the Address-Domain AVP, of type Grouped. A return value of null implies that the AVP has not been set.
     */
    abstract AddressDomain getAddressDomain();


    /**
     * Returns true if the Address-Type AVP is present in the message.
     */
    abstract boolean hasAddressType();

    /**
     * Returns true if the Address-Data AVP is present in the message.
     */
    abstract boolean hasAddressData();

    /**
     * Returns true if the Address-Domain AVP is present in the message.
     */
    abstract boolean hasAddressDomain();


    /**
     * Sets the value of the Address-Type AVP, of type Enumerated.
     */
    abstract void setAddressType(AddressType addressType);

    /**
     * Sets the value of the Address-Data AVP, of type UTF8String.
     */
    abstract void setAddressData(String addressData);

    /**
     * Sets the value of the Address-Domain AVP, of type Grouped.
     */
    abstract void setAddressDomain(AddressDomain addressDomain);

}
